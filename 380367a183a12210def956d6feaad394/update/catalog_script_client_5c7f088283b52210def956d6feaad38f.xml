<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Request Loaner Vehicle">b55ad03283692210def956d6feaad376</cat_item>
        <cat_variable>IO:a15d9cf283692210def956d6feaad3ca</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>autopoploc</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
   if (isLoading || newValue == '') {
      return; // your script will only run after the user actively selects or changes the requested_for field to a non-empty value.//
   }

   var ga = new GlideAjax('includeClass'); // Script Include name, this object lets your client script talk to a Script Include on the server called 'includeClass'. this is how the client calls server-side code.
   ga.addParam('sysparm_name', 'getUserLocation'); // method name in Script Include, i tell GlideAjax which method inside the Script Include to run, in this case, the method is called 'getuserlocation'. the server needs to know which function to execute.
   ga.addParam('sysparm_user_name', newValue); // pass the Requested For user's sys_id, i send another parameter called'sysparm_user_name' with the value of newValu, which is the sys_id of the user selected in requested_for. the service will use this to look up the user's location. in summary, i am telling the client script, "hey server, please run the getUserLocation method in includeClass, and here's the user ID (newValue) for you to use. "
   
   ga.getXML(function(response) { // calls the server asynchronously (w/out refreshing the page), runs the script include method, and when the server responds, it executes the function inside the parentheses.//
       var answer = response.responseXML.documentElement.getAttribute("answer"); // extracts the value of "answer" atttribute from the XML response sent back by the server. that "answer" is what my script include returned, the user location. 
       g_form.setValue('office_location', answer); // lastly, this sets the 'office_location' field on the catalog form to the location value returned from the server. //
   });
}
]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-05-30 04:29:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5c7f088283b52210def956d6feaad38f</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>autopoploc</sys_name>
        <sys_overrides/>
        <sys_package display_value="Loaner Vehicle Request and Inventory" source="x_1474716_lva">380367a183a12210def956d6feaad394</sys_package>
        <sys_policy/>
        <sys_scope display_value="Loaner Vehicle Request and Inventory">380367a183a12210def956d6feaad394</sys_scope>
        <sys_update_name>catalog_script_client_5c7f088283b52210def956d6feaad38f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-04 21:56:50</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
